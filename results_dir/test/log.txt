train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=32, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

/home/nemodrive0/workspace/andrein/rl/RL_CarRacing/train_main.py

Namespace(actual_procs=12, env='CarRacing-v0', eval_interval=0, frames=20000000.0, log_interval=1, max_eprews=0, model_dir='results_dir/test', procs=4, save_all='fasle', save_best=True, save_interval=10, seed=1, tb=False)

Training data exists & loaded successfully

Model [ModelV0] successfully created

ModelV0(
  (image_conv): Sequential(
    (0): Conv2d(1, 16, kernel_size=(2, 2), stride=(1, 1))
    (1): ReLU()
    (2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(16, 32, kernel_size=(2, 2), stride=(1, 1))
    (4): ReLU()
    (5): Conv2d(32, 64, kernel_size=(2, 2), stride=(1, 1))
    (6): ReLU()
  )
  (fc1): Linear(in_features=129600, out_features=128, bias=True)
  (memory_rnn): GRUCell(128, 128)
  (actor): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=382, bias=True)
  )
  (critic): Sequential(
    (0): Linear(in_features=128, out_features=64, bias=True)
    (1): Tanh()
    (2): Linear(in_features=64, out_features=1, bias=True)
  )
)

CUDA available: True

U 1 | F 000400 | FPS 0238 | D 1 | rR:μσmM 0.00 0.00 0.00 0.00 | F:μσmM 0.0 0.0 0 0 | H 10.292 | V 0.118 | pL -2.350 | vL 5.630 | ∇ 6.584 | MM 6.584120 
U 2 | F 000800 | FPS 0271 | D 3 | rR:μσmM 0.00 0.00 0.00 0.00 | F:μσmM 0.0 0.0 0 0 | H 10.270 | V -1.715 | pL 0.671 | vL 5.442 | ∇ 81.769 | MM 81.768681 
U 3 | F 001200 | FPS 0201 | D 5 | rR:μσmM -25.36 43.92 -101.42 0.00 | F:μσmM 58.8 101.8 0.0 235.0 | H 10.217 | V -1.861 | pL 7.948 | vL 216.782 | ∇ 16.626 | MM 16.626228 
U 4 | F 001600 | FPS 0208 | D 7 | rR:μσmM -53.95 54.14 -114.37 0.00 | F:μσmM 144.8 149.8 0.0 344.0 | H 10.227 | V -1.829 | pL 4.803 | vL 225.235 | ∇ 16.974 | MM 16.973879 
